function [dhat,Fhat,sigma_h,sigma_n,lambdamax]=RelaxationMisPCA_v7(X,FigOnOff)
S=length(X);
n=size(X{1},1);
p=size(X{1},2);
Sigma=cell(S,1);
SigmaAv=zeros(n);


for i=1:S
    if p==1
         Sigma{i}=1/p*(X{i})*(X{i})';
    else
        Sigma{i}=cov(X{i}');
    end
end
Z=cell(S,n);
for i=1:S
  for j=1:n
      T=CreateTranslationMatrix(j-1,n);
      Z{i,j}=T'*Sigma{i}*T;
      if i==2
      CostAux(j)=eigs(Sigma{1}+Z{i,j},1);
      end
  end
end
figure
plot(CostAux)
[minval,indx]=min(CostAux)
lambda1=eigs(Sigma{1}+Z{i,indx},1)

cvx_begin
    variable lambda(1,1);
    variable eta(n,S);
   % variable nu(n,S);
    expressions W(n,n);
    W=zeros(n);
    for i=1:S
        for j=1:n
            W= W+(eta(j,i))*Z{i,j};
        end
    end
    minimize(lambda);
        subject to
        lambda*eye(n)-W==semidefinite(n);
        for i=1:S
            ones(1,n)*eta(:,i)==1;
            eta(:,i)>=zeros(n,1);
            %nu(:,i)>=zeros(n,1);
        end
cvx_end

C=-cvx_optval
%[hest,d]=eigs(W,3,'lm',opts);
[hest,d]=eigs(W,1)
lambdamax=lambda
figure
subplot(4,1,1)
plot(hest);
subplot(4,1,2)
imagesc(W)
subplot(4,1,3)
imagesc(eta)
title('eta')
subplot(4,1,4)
%imagesc(nu)
title('nu')
disp('constraint verification')
% for i=1:S
%     ones(1,n)*eta(:,i)
%     a_i=eta(:,i)
%     norm(a_i)
% end
hest=hest(:,1)

%% Obtain delays from initial estimate

SigmaAligned=zeros(n);
dhat=zeros(S,1);
for i=1:S
    d=zeros(n,1);
    for k=1:n
        T=CreateTranslationMatrix(k-1,n);
        d(k)=hest'*T'*Sigma{i}*T*hest;
    end
    [maxVal indx]=max(d);
    dhat(i)=indx-1;
    [T]=CreateTranslationMatrix(dhat(i),n);
    SigmaAligned=SigmaAligned+1/S*T'*Sigma{i}*T;
end
%
%[Fhat,lambdamax]=eigs(SigmaAligned,1,'lm',opts);%
Fhat=hest;

sigma_n=1/(n-1)*(trace(SigmaAv)-lambdamax);
sigma_h=lambdamax-sigma_n;
Fhat=Fhat;
lambdamax=lambdamax;